# --------------------
set-window-option -g mode-mouse on


##################################################################################
# Improvements to the Default TMUX settings here were found on a thoughtbot post
#   -- http://robots.thoughtbot.com/post/2166174647/love-hate-tmux
# 
##################################################################################

# possible fix for tmuxinator "failed to connect to server" error
#set -g base-index 1
#set -g pane-base-index 1
#set-option -g base-index 1
#set-window-option -g pane-base-index 1

# improve colors
set -g default-terminal "screen-256color"

# soften status bar color from harsh green to light gray
set -g status-bg '#666666'
set -g status-fg '#aaaaaa'

# remove administrative debris (session name, hostname, time) in status bar
set -g status-left ''
set -g status-right ''


############################################################################
## Bindings
#############################################################################
unbind h
unbind j
unbind k
unbind l

# The “prefix” namespaces tmux commands. By default it is Ctrl+b. In our tmux.conf in 
#   thoughtbot/dotfiles, we bound it to Ctrl+a:
#
# act like GNU screen
unbind C-b
set -g prefix C-g


# Fix Copy/Paste from pasteboard in Mac-OSX
#   -- http://robots.thoughtbot.com/post/19398560514/how-to-copy-and-paste-with-tmux-on-mac-os-x
#   $> brew install reattach-to-user-namespace
#
# enable copy-paste http://goo.gl/DN82E
# enable RubyMotion http://goo.gl/WDlCy
set -g default-command "reattach-to-user-namespace -l bash"


############################################################################
## Bindings
#############################################################################
# reload tmux conf
bind-key r source-file ~/.tmux.conf

# list panes
bind-key Space list-panes
  
#  # break-pane
bind-key Enter break-pane


############################################################################
## windows
############################################################################
# use "v" and "s" to do vertical/horizontal splits, like vim
bind s split-window -v
bind v split-window -h

bind n next-window
bind p previous-window

 
############################################################################
## panes
############################################################################

# smart pane switching with awareness of vim splits
 bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
 bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
 bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
 bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
 bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\'') || tmux select-pane -l"


# use the vim resize keys.
# the number at the end is how much the pane will be resized,
# and 1 is fairly small -- you might want to tweak this.
#bind < resize-pane -L 10
#bind > resize-pane -R 10
#bind [ resize-pane -L 5
#bind ] resize-pane -R 5
bind h resize-pane -L 5
bind l resize-pane -R 5
bind j resize-pane -D 5
bind k resize-pane -U 5


